.form {

    @include respond(phone-small) {
        text-align: center;
    }

    &__group {
        
        &:not(:last-child) {
            margin-bottom: 2rem;
        }
    }

    &__input {
        padding: 1.6rem 2.3rem;
        border: none;
        border-radius: 3px;
        font-family: inherit; // inherit from font family Lato!
        font-size: 1.6rem;
        background-color: rgba($color-white, .5);
        border-bottom: 3px solid $color-primary;
        width: 84%;
        display: block;
        transition: all .3s;

        @include respond(tab-port) {
            width: 100%;         
        }

         // sudo-class for when the element is on focus
        &:focus {
            // outline border is blue by default. 
            outline: none; // remove the blue border around the input field.

             //Adding custom style while the input is on focus.
            box-shadow: 0 1.5rem 2.5rem rgba($color-black, .1);
            border-bottom: 3px solid $color-primary;

            &:invalid {
                border-bottom: 3px solid $color-tertiary-dark2;
            }
        }

        &::-webkit-input-placeholder {
            color:$color-grey-dark-2;
        }

        &::-moz-placeholder { /* Firefox 19+ */
            color: $color-grey-dark-2 ;
       }

       &:-ms-input-placeholder { /* IE 10+ */
            color: $color-grey-dark-2 ;
       }
    }

    &__label {
        font-size: 1.2rem;
        font-weight: 700;
        margin-left: 2.3rem;
        margin-top: .7rem;
        display: block;
        transition: all .3s;
    }

    // The '+' means get the next siblin (below) selector
    &__input:placeholder-shown + &__label { // When the placeholder is shown, then style the form__label.
        opacity: 0; // Using opacity here because of the animation. Animation does not work with visibility:hidden property.
        visibility: hidden;
        transform: translateY(-4rem);
    }

    // Polyfill for internet explorer
    &__input:-ms-input-placeholder + &__label {
        opacity: 0;
        visibility: hidden;
        transform: translateY(-4rem);
    }

    &__radio-group {
        width: 47%;
        display: inline-block;
        margin-left: -1rem;

        @include respond(tab-port) {
            width: 100%;
            margin-bottom: 2rem;
        }

        @include respond(phone-small) {
            // width: 50%;
            // margin-bottom: 2rem;
            text-align: initial;
        }
    }

    &__radio-input {
        opacity: 0; // This option is for acessibility when using TAB to switch/jump in html elements
    }

    &__radio-label {
        font-size: $default-font-size;
        cursor: pointer;
        position: relative;
        padding-left: 4rem;
    }

    //The out circle
    &__radio-button {
        height: 3rem;
        width: 3rem;
        border: 3px solid $color-primary;
        border-radius: 50%;
        display: inline-block;
        position: absolute;
        top: -.5rem;
        left: 0;

        //The inner solid circle
        &::after {
            content: "";
            height: 1.5rem;
            width: 1.5rem;            
            border-radius: 50%;
            display: block;
            background-color: $color-primary;
            @include absolute-center;
            opacity: 0;
            transition: all .3s;
        }
    }

    // check the form_radio-button(span element) when the radio input is checked. '+' means the next sibling
    &__radio-input:checked + &__radio-label &__radio-button::after {
        opacity: 1;
    }
}