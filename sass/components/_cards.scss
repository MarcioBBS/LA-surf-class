.card {

    // FUNCTIONALITY

    /*
    * The perspective property is used to give a 3D-positioned element some perspective.
    * The perspective property defines how far the object is away from the user. So, a lower value will result in a more intensive 3D effect than a higher value.
    * When defining the perspective property for an element, it is the CHILD elements that get the perspective view, NOT the element itself.
    */
    perspective: 150rem;
    -moz-perspective: 150rem;
    position: relative;

    /* 
    * to correct when the elements collpases. mainly caused when changes the float of the element. 
    * In that case it was caused by the abolute position in the child element. The absolute position takes out the element from the natural flow.
    */
    height: 50rem; //card height    

    &__side {
        height: 50rem; //card height
        transition: all .8s ease;
        position: absolute;                       
        top: 0;
        left: 0;
        width: 100%; // because the absolute position the elements width collpases. the correction for that is to set width to 100%;
        -webkit-backface-visibility: hidden; // hide the back side of the element
        backface-visibility: hidden;
        border-radius: .5rem;
        overflow: hidden; //used to corrent the border-radius in the background-image.
        box-shadow: 0 1.5rem 4rem $rgba-color-black-15;

        &--front {
            background-color: $color-white;
        }

        &--back {
            transform: rotateY(180deg);
            &-1 {
                background-image: linear-gradient(to right bottom, $color-secondary-light, $color-secondary-dark);
            }
            
            &-2 {
                background-image: linear-gradient(to right bottom, $color-primary-light, $color-primary-dark);
            }
            
            &-3 {
                background-image: linear-gradient(to right bottom, $color-tertiary-light, $color-tertiary-dark);
            }
        }
    }    

    // When we hover the card, we want the card_side to be transformed (Rotated)! .card:hover .card_side.
    &:hover &__side--front {
        transform: rotateY(-180deg);
    }

    &:hover &__side--back {
        transform: rotateY(0);
    }

    // FRONT SIDE STYLING
    &__picture {
        background-size: cover;
        height: 23rem; // height of the background-image
       
        background-blend-mode: hard-light; // The background-blend-mode property defines the blending mode of each background layer (color and/or image)
        -webkit-clip-path: ellipse(100% 100% at 23% 0%);
        clip-path: ellipse(100% 100% at 23% 0%);
        
        border-radius: .5rem;

        &--1 {
            background-image: linear-gradient(to right bottom, rgba($color-secondary-light, .8), rgba($color-secondary-dark, .8)),
            url(../img/card1.jpg);


            @include respond(tab-port) {
                background-image: linear-gradient(to right bottom, $color-secondary-light, $color-secondary-dark),
                                  url(../img/card1-small.jpg); 
            }
        }

        &--2 {
            background-image: linear-gradient(to right bottom, rgba($color-primary-light, .8), rgba($color-primary-dark, .8)),
            url(../img/card2.jpg);
            
            @include respond(tab-port) {
            background-image: linear-gradient(to right bottom, $color-primary-light, $color-primary-dark),
                              url(../img/card2-small.jpg); 
            }
        }

        &--3 {
            background-image: linear-gradient(to right bottom, rgba($color-tertiary-light, .8), rgba($color-tertiary-dark, .8)),
            url(../img/card3.jpg);
            
            @include respond(tab-port) {
            background-image: linear-gradient(to right bottom, $color-tertiary-light, $color-tertiary-dark),
                              url(../img/card3-small.jpg); 
            }
        }
    }

    &__heading {
        font-size: 2.8rem;
        font-weight: 300;
        text-transform: uppercase;
        text-align: right;
        color: $color-white;
        position: absolute;
        top: 12rem;
        right: 2rem;
        width: 56%; // force the text to break.
    }

    &__heading-span {
        padding: 1rem 1.6rem;
        border-radius: .5rem;

        /*
        * The box-decoration-break CSS property specifies how an element's fragments should be rendered when broken across multiple lines, 
        * columns, or pages.
        *
        * The specified value will impact the appearance of the following properties: 
        * background, border, border-image, box-shadow, clip-path, margin and padding
        *
        * In this case, it will impact the padding property above (padding: 1rem 1.5rem;) ! It will apply the padding to each line 
        */
        box-decoration-break: clone;  // Clone: Each box fragment is rendered independently with the specified border, padding, and margin wrapping each fragment.
        -webkit-box-decoration-break: clone;

        &--1 {
            background-image: linear-gradient(to right bottom, 
            rgba($color-secondary-light, .85), 
            rgba($color-secondary-dark, .85));
        }

        &--2 {
            background-image: linear-gradient(to right bottom, 
            rgba($color-primary-light, .85), 
            rgba($color-primary-dark, .85));
        }

        &--3 {
            background-image: linear-gradient(to right bottom, 
            rgba($color-tertiary-light, .85), 
            rgba($color-tertiary-dark, .85));
        }
    }

    &__details {
        padding: 2.8rem;

        ul{
            list-style: none;
            width: 80%;
            margin: 0 auto;

            li{
                text-align: center;
                font-size: 1.5rem;
                padding: 1rem;

                &:not(:last-child) {
                    border-bottom: 1px solid $color-grey-light-3;
                }
            }
        }
    }

    // BACK SIDE STYLING
    &__cta {
        @include absolute-center;
        width: fit-content;
        text-align: center;
    }

    &__price-box {
        text-align: center;
        color: $color-white;
        margin-bottom: 8rem;
    }

    &__price-only {
        font-size: 1.4rem;
        text-transform: uppercase;
    }

    &__price-value {
        font-size: 6rem;
        font-weight: 100;
    }

    //@include respond(tab-port){
    @media only screen and (max-width: 56.25em), only screen and (hover:none) {
        height: auto;
        border-radius: .5rem;
        background-color: $color-white;
        box-shadow: 0 1.5rem 4rem $rgba-color-black-15;

        &__side {
            height: auto;            
            position: relative;
            box-shadow: none;

            &--back {
                transform: rotateY(0);
                border-radius: 100% 0% 100% 0% / 26% 100% 0% 74%; 
            }
        }

        &__picture {
            height: 30rem;
        }

        &:hover &__side--front {
            transform: rotateY(0);
        }

        &__details {
            padding: 1.5rem 2rem;
        }

        // FRONT SIDE STYLING
        &__heading {
            top: 3rem;
        }

        // BACK SIDE STYLING
        &__cta {
            @include absolute-plain(relative);     
            transform: translate(0);
            width: 100%;
            padding: 4rem;
        }

        &__price-box {
            margin-bottom: 3rem;
        }

        &__price-value {
            font-size: 6rem;
            font-weight: 300;
        }
    }

}